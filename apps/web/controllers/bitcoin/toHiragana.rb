module Web::Controllers::Bitcoin
  class ToHiragana
    include Web::Action
    expose :hexTx, :hiraganaTx

    def call(params)
      params = params[:bitcoin]
      @hexTx = params[:hexTx]
      @hiraganaTx = params[:hiraganaTx]


      toHiragana = {"000000"=>"あ", "000001"=>"い", "000010"=>"う", "000011"=>"え", "000100"=>"お", "000101"=>"か", "000110"=>"き", "000111"=>"く", "001000"=>"け", "001001"=>"こ", "001010"=>"さ", "001011"=>"し", "001100"=>"す", "001101"=>"せ", "001110"=>"そ", "001111"=>"た", "010000"=>"ち", "010001"=>"つ", "010010"=>"っ", "010011"=>"て", "010100"=>"と", "010101"=>"な", "010110"=>"に", "010111"=>"ぬ", "011000"=>"ね", "011001"=>"の", "011010"=>"は", "011011"=>"ぱ", "011100"=>"ば", "011101"=>"ひ", "011110"=>"ぴ", "011111"=>"ば", "100000"=>"ふ", "100001"=>"ぷ", "100010"=>"ぶ", "100011"=>"へ", "100100"=>"ペ", "100101"=>"べ", "100110"=>"ほ", "100111"=>"ぽ", "101000"=>"ぼ", "101001"=>"ま", "101010"=>"み", "101011"=>"む", "101100"=>"め", "101101"=>"も", "101110"=>"ゃ", "101111"=>"や", "110000"=>"ゅ", "110001"=>"ゆ", "110010"=>"ょ", "110011"=>"よ", "110100"=>"ら", "110101"=>"り", "110110"=>"る", "110111"=>"れ", "111000"=>"ろ", "111001"=>"わ", "111010"=>"を", "111011"=>"ん", "111100"=>"、", "111101"=>"。", "111110"=>"!", "111111"=>"?"}
      toBin = {"あ"=>"000000", "い"=>"000001", "う"=>"000010", "え"=>"000011", "お"=>"000100", "か"=>"000101", "き"=>"000110", "く"=>"000111", "け"=>"001000", "こ"=>"001001", "さ"=>"001010", "し"=>"001011", "す"=>"001100", "せ"=>"001101", "そ"=>"001110", "た"=>"001111", "ち"=>"010000", "つ"=>"010001", "っ"=>"010010", "て"=>"010011", "と"=>"010100", "な"=>"010101", "に"=>"010110", "ぬ"=>"010111", "ね"=>"011000", "の"=>"011001", "は"=>"011010", "ぱ"=>"011011", "ば"=>"011111", "ひ"=>"011101", "ぴ"=>"011110", "ふ"=>"100000", "ぷ"=>"100001", "ぶ"=>"100010", "へ"=>"100011", "ペ"=>"100100", "べ"=>"100101", "ほ"=>"100110", "ぽ"=>"100111", "ぼ"=>"101000", "ま"=>"101001", "み"=>"101010", "む"=>"101011", "め"=>"101100", "も"=>"101101", "ゃ"=>"101110", "や"=>"101111", "ゅ"=>"110000", "ゆ"=>"110001", "ょ"=>"110010", "よ"=>"110011", "ら"=>"110100", "り"=>"110101", "る"=>"110110", "れ"=>"110111", "ろ"=>"111000", "わ"=>"111001", "を"=>"111010", "ん"=>"111011", "、"=>"111100", "。"=>"111101", "!"=>"111110", "?"=>"111111"}

      # encode
      if @hexTx then
        # split each digit
        splitedHexTx = @hexTx.split('')
        # hex to binary
        binFromHex = []
        splitedHexTx.each do |p|
          binFromHex << p.to_i(16).to_s(2).rjust(4, '0')
        end

        # devide in 6 characters
        splitedHBinTx = binFromHex.join.scan(/\d{1,6}/)
        hiraganaTx = []
        # binary to hiragana
        splitedHBinTx.each do |p|
          p = p.ljust(6, '0') if p.size < 6
          hiraganaTx << toHiragana[p]
        end
        @hiraganaTx = hiraganaTx.join
      end

      if @hiraganaTx then
        # decode
        # divide
        splitedHiraganaTx = @hiraganaTx.scan(/./)
        # hiragana to binary
        binFromHiragana = []
        splitedHiraganaTx.each do |p|
          binFromHiragana << toBin[p]
        end

        # devide
        binTx = binFromHiragana.join.scan(/\d{4}/)
        # binary to hex
        hexTx = []
        # binary to hex
        binTx.each do |p|
          hexTx << p.to_i(2).to_s(16)
        end
        @hexTx = hexTx.join
      end

    end
  end
end
